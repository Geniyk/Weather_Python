from tkinter import *
from tkinter import messagebox
from geopy.geocoders import Nominatim
from timezonefinder import TimezoneFinder
from datetime import datetime
import requests
import pytz
import yagmail
from email.message import EmailMessage

# Create the main application window
root = Tk()
root.title("Login")
root.geometry("925x500+300+200")
root.configure(bg='#fff')
root.resizable(False, False)

# Define variables to store user input
user = StringVar()
code = StringVar()

def signin():
    username = user.get()
    password = code.get()

    if username == 'admin' and password == '1234':
        # Destroy the login window
        root.destroy()

        # Create the weather app window
        weather_app = Tk()
        weather_app.title("Weather App")
        weather_app.geometry("900x500+500+200")

        # Define variables to store checkbox values
        show_pressure = BooleanVar()
        show_humidity = BooleanVar()
        show_description = BooleanVar()

        # Function to send an email with the weather data using yagmail
        def send_email(temperature, pressure, description, current_time):
            try:
                # Create a yagmail SMTP client
                yag = yagmail.SMTP('saurabhkrchauhan1402@gmail.com', 'uypj feif oocl nqlo')

                recipient_list = 'bt22eci040@iiitn.ac.in'
                subject = 'Weather Data'
                email_content = f'Temperature: {temperature}°C\nCurrent Time: {current_time}\nPressure :{pressure}\n'

                if show_pressure.get():
                    email_content += f'Pressure: {pressure} hPa\n'
                if show_description.get():
                    email_content += f'Description: {description}\n'

                # Send the email
                yag.send(
                    to=recipient_list,
                    subject=subject,
                    contents=email_content
                )

                yag.close()

                messagebox.showinfo("Weather App", "Weather data sent successfully!")

            except Exception as e:
                messagebox.showerror("Weather App", f"Error sending email: {str(e)}")

        # Create a function to get weather data
        def get_weather():
            try:
                city = textField.get()
                geolocator = Nominatim(user_agent="geoapiExercises")
                location = geolocator.geocode(city)
                if location is None:
                    raise Exception("Location not found")
                obj = TimezoneFinder()
                result = obj.timezone_at(lng=location.longitude, lat=location.latitude)
                home = pytz.timezone(result)
                local_time = datetime.now(home)
                current_time = local_time.strftime("%I:%M %p")
                clock.config(text=current_time)
                name.config(text="CURRENT WEATHER")
                api_key = 'ac653ed7b3564d52c853056f1e69956f'
                api_url = f"https://api.openweathermap.org/data/2.5/weather?lat={location.latitude}&lon={location.longitude}&appid={api_key}"
                json_data = requests.get(api_url).json()
                condition = json_data['weather'][0]['main']
                description = json_data['weather'][0]['description']
                temp = int(json_data['main']['temp'] - 273.15)
                pressure = json_data['main']['pressure']
                wind = json_data['wind']['speed']

                t.config(text=(temp, "°"))
                c.config(text=(condition, "|", "FEELS", "LIKE", temp, "°"))
                if temp >= 25:
                    labelx = Label(weather_app, text="HOT", font=("Helvetica", 15, 'bold')).place(x=400, y=100)
                    imageSun = PhotoImage("sun.png")

                    My_sun = Label(image=imageSun).place(x=400, y=200)
                elif 23 < temp < 25:
                    labely = Label(weather_app, text="Normal", font=("Helvetica", 15, 'bold')).place(x=400, y=100)

                else:
                    labelz = Label(weather_app, text="Cold", font=("Helvetica", 15, 'bold')).place(x=400, y=100)
                    imageCloud = PhotoImage(file="cool.png")
                    My_cloud = Label(image=imageCloud).place(x=400, y=200)
                w.config(text=f"{wind} m/s")

                if show_humidity.get():
                    humidity = json_data['main']['humidity']
                    h.config(text=f"humidity: {humidity}%")
                else:
                    h.config(text="")
                if show_description.get():
                    d.config(text=f"Description: {description}")
                else:
                    d.config(text="")
                if show_pressure.get():
                    p.config(text=f"Pressure: {pressure} hPa")
                else:
                    p.config(text="")

                # Add a button to send weather data via email
                email_button = Button(weather_app, text="Send Weather Data", command=lambda: send_email(temp, pressure, description, current_time))
                email_button.place(x=700, y=450)

            except Exception as e:
                messagebox.showerror("Weather App", str(e))

        # Search box
        search_box = PhotoImage(file="Copyofsearch.png")
        myImage = Label(image=search_box)
        myImage.place(x=20, y=20)

        textField = Entry(weather_app, justify="center", width=17, font=('piopp', 25, 'bold'), bg="#404040", border=0, fg='white')
        textField.place(x=50, y=40)
        textField.focus()

        # Search icon
        search_icon = PhotoImage(file="Copyofsearch_icon.png")
        myImage_icon = Button(image=search_icon, borderwidth=0, cursor='hand2', command=get_weather)
        myImage_icon.place(x=400, y=34)

        # Logo image
        logo_image = PhotoImage(file="logo.png")
        logo = Label(image=logo_image)
        logo.place(x=150, y=100)

        # Time
        name = Label(weather_app, font=("arial", 15, "bold"))
        name.place(x=100, y=400)
        clock = Label(weather_app, font=("Helvetica", 20))
        clock.place(x=100, y=450)

        # Bottom box
        frame_image = PhotoImage(file="bottom_box2.png")
        frame_myimage = Label(image=frame_image)
        frame_myimage.pack(padx=5, pady=5, side=BOTTOM)

        # Label 1
        label1 = Label(weather_app, text="WIND", font=("Helvetica", 15, 'bold'), fg="white", bg="#1ab5ef")
        label1.place(x=400, y=700)

        # Label 2
        label2 = Label(weather_app, text="HUMIDITY", font=("Helvetica", 15, 'bold'), fg="white", bg="#1ab5ef")
        label2.place(x=600, y=700)

        # Label 3
        label3 = Label(weather_app, text="DESCRIPTION", font=("Helvetica", 15, 'bold'), fg="white", bg="#1ab5ef")
        label3.place(x=800, y=700)

        # Label 4
        label4 = Label(weather_app, text="PRESSURE", font=("Helvetica", 15, 'bold'), fg="white", bg="#1ab5ef")
        label4.place(x=1050, y=700)

        t = Label(weather_app, font=('arial', 15, 'bold'), fg="#ee666d")
        t.place(x=300, y=450)

        c = Label(weather_app, font=('arial', 15, 'bold'), fg="#ee666d")
        c.place(x=300, y=480)

        w = Label(weather_app, text=" ...", font=('arial', 15, 'bold'), bg="#1ab5ef")
        w.place(x=400, y=730)

        h = Label(weather_app, text="...", font=('arial', 15, 'bold'), bg="#1ab5ef")
        h.place(x=600, y=730)

        d = Label(weather_app, text="...", font=('arial', 15, 'bold'), bg="#1ab5ef")
        d.place(x=800, y=730)

        p = Label(weather_app, text="...", font=('arial', 15, 'bold'), bg="#1ab5ef")
        p.place(x=1050, y=730)

        # CHECKBOX
        pressure_checkbox = Checkbutton(weather_app, text="Pressure", variable=show_pressure, command=get_weather)
        pressure_checkbox.place(x=600, y=600)

        humidity_checkbox = Checkbutton(weather_app, text="Humidity", variable=show_humidity, command=get_weather)
        humidity_checkbox.place(x=700, y=600)

        description_checkbox = Checkbutton(weather_app, text="Description", variable=show_description, command=get_weather)
        description_checkbox.place(x=800, y=600)

        weather_app.mainloop()
    else:
        messagebox.showerror('Invalid', 'Invalid username or password')

img = PhotoImage()
Label(root, image=img, bg='grey').place(x=50, y=50)

frame = Frame(root, width=350, height=350, bg='grey')
frame.place(x=480, y=70)

heading = Label(frame, text='Sign In', fg='#57a1f8', bg='white', font=('Microsoft YaHei UI Light', 23, 'bold'))
heading.place(x=100, y=5)

# Entry for username
def on_enter(e):
    user.delete(0, 'end')

def on_leave(e):
    name = user.get()
    if name == ' ':
        user.insert(0, 'Username')

user = Entry(frame, width=25, fg='black', border=2, bg='white', font=('Microsoft YaHei UI Light', 11), textvariable=user)
user.place(x=30, y=80)
user.insert(0, 'Username')
user.bind('<FocusIn>', on_enter)
user.bind('<FocusOut>', on_leave)

Frame(frame, width=290, height=2, bg='black').place(x=20, y=107)

# Entry for password
def on_enter(e):
    code.delete(0, 'end')

def on_leave(e):
    name = code.get()
    if name == ' ':
        code.insert(0, 'Password')

code = Entry(frame, width=25, fg='black', border=2, bg='white', font=('Microsoft YaHei UI Light', 11), textvariable=code)
code.place(x=30, y=150)
code.insert(0, 'Password')
code.bind('<FocusIn>', on_enter)
code.bind('<FocusOut>', on_leave)

Frame(frame, width=290, height=2, bg='black').place(x=20, y=177)

# Sign In button
Button(frame, width=39, pady=7, text='Sign In', bg='#57a1f8', border=2, command=signin).place(x=35, y=204)

# Label for Sign Up
label = Label(frame, text="Don't have an account?", fg='black', bg='white', font=('Microsoft YaHei UI Light', 9))
label.place(x=75, y=270)

# Sign Up button
sign_up = Button(frame, width=5, text='Sign Up', border=2, bg='white', cursor='hand2', fg='#57a1f8')
sign_up.place(x=215, y=270)

root.mainloop()
